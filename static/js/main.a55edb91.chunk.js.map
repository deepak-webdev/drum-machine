{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sounds","key","mp3","DrumPad","props","playSound","audio","current","play","id","parentNode","querySelector","innerText","React","createRef","this","text","className","onClick","ref","src","Component","document","addEventListener","e","toUpperCase","getElementById","parent","classList","add","remove","App","map","sound","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PAGMA,EAAS,CACb,CACEC,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,0DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,2DAcHC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,UAAY,WACV,EAAKC,MAAMC,QAAQC,OACnB,IAAMC,EAAK,EAAKH,MAAMC,QAAQE,GACf,EAAKH,MAAMC,QAAQG,WACXA,WACfC,cAAc,MAAMC,UAA5B,UAA2CH,EAA3C,gBAfA,EAAKH,MAAQO,IAAMC,YAFF,E,0CAoBnB,WACE,MAAwBC,KAAKX,MAArBY,EAAR,EAAQA,KAAMV,EAAd,EAAcA,MACd,OACE,sBAAKW,UAAU,WAAWC,QAASH,KAAKV,UAAWI,GAAE,eAAUO,GAA/D,UACGA,EACD,uBAAOG,IAAKJ,KAAKT,MAAOc,IAAKd,EAAOW,UAAU,OAAOR,GAAIO,W,GA1B3CH,IAAMQ,WAgC5BC,SAASC,iBAAiB,WAAW,SAACC,GACpC,IAAMf,EAAKe,EAAEvB,IAAIwB,cACXnB,EAAQgB,SAASI,eAAejB,GACtC,GAAIH,EAAO,CACT,IAAMqB,EAASrB,EAAMI,WACrBiB,EAAOC,UAAUC,IAAI,UACrBvB,EAAME,OAENF,EAAMiB,iBAAiB,SAAS,WAC9BI,EAAOC,UAAUE,OAAO,iBAIfC,MAxDH,kBACV,qBAAKtB,GAAG,eAAR,SACE,sBAAKA,GAAG,UAAUQ,UAAU,UAA5B,UACE,8CACCjB,EAAOgC,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CAASlB,KAAMiB,EAAMhC,IAAeK,MAAO2B,EAAM/B,KAAlBgC,YClCxBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASI,eAAe,SAM1BS,M","file":"static/js/main.a55edb91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst sounds = [\r\n  {\r\n    key: \"Q\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\r\n  },\r\n  {\r\n    key: \"W\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\r\n  },\r\n  {\r\n    key: \"E\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\r\n  },\r\n  {\r\n    key: \"A\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\r\n  },\r\n  {\r\n    key: \"S\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\r\n  },\r\n  {\r\n    key: \"D\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\r\n  },\r\n  {\r\n    key: \"Z\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\r\n  },\r\n  {\r\n    key: \"X\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\r\n  },\r\n  {\r\n    key: \"C\",\r\n    mp3: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\r\n  },\r\n];\r\nconst App = () => (\r\n  <div id=\"drum-machine\">\r\n    <div id=\"display\" className=\"display\">\r\n      <h1>Play a sound</h1>\r\n      {sounds.map((sound, idx) => (\r\n        <DrumPad text={sound.key} key={idx} audio={sound.mp3} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nclass DrumPad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.audio = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.audio.current.addEventListener(\"ended\", (e) => {\r\n  //     const parent = e.target.parentNode;\r\n  //     parent.classList.remove(\"active\");\r\n  //   });\r\n  // }\r\n  // function for playing sounds\r\n  playSound = () => {\r\n    this.audio.current.play();\r\n    const id = this.audio.current.id;\r\n    const parent = this.audio.current.parentNode;\r\n    const display = parent.parentNode;\r\n    display.querySelector(\"h1\").innerText = `${id} is playing`;\r\n  };\r\n\r\n  render() {\r\n    const { text, audio } = this.props;\r\n    return (\r\n      <div className=\"drum-pad\" onClick={this.playSound} id={`drum-${text}`}>\r\n        {text}\r\n        <audio ref={this.audio} src={audio} className=\"clip\" id={text} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  const id = e.key.toUpperCase();\r\n  const audio = document.getElementById(id);\r\n  if (audio) {\r\n    const parent = audio.parentNode;\r\n    parent.classList.add(\"active\");\r\n    audio.play();\r\n\r\n    audio.addEventListener(\"ended\", () => {\r\n      parent.classList.remove(\"active\");\r\n    });\r\n  }\r\n});\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}